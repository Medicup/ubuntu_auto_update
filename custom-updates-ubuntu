#!/bin/bash -x
#This script allows for update, upgrade, and dist-upgrade
#Author: Stephen J Kennedy
#kali fork

THISHOST=$(hostname -f)
DATE=$(date +"%F")
TIME=$(date +"%H:%M:%S")
LOGPATH="/bin/custom"
LOG="${LOGPATH}/log/${DATE}-log"
TEMP="${LOGPATH}/.temp"
MAIL=/usr/bin/sendemail
TO=medicup@gmail.com
UPDATE="upgrade dist-upgrade autoremove" #options for autoUpdate do statement

#mail Function uses sendmail to distribute results of autoUpdate when no errors
mailOutput(){
   $MAIL -f admin@${THISHOST} -t $TO -m "Update log from $THISHOST" < $LOG
}

#error function is run when there is an error in the update.
#Will distribute an error notification and exit the program
error (){
   echo "${DATE}-${TIME}" > $ERR
   echo "${THISHOST}-ALERT: There was an error running apt-get ${UPDATE}!" >> $ERR
   $MAIL -F admin@${THISHOST} -t $TO < $ERR
   exit
}

#checks to see if log is present, if not creates
logCreate(){
   if [ ! -f $LOG ]
      then
         echo "Creating log file."
   fi
}

#autoUpdate function uses a do statement that will run until error or
#all update options are processed. It provides a start and success
#response that is exported to a text file

autoUpdate (){
echo "Starting update for $HOSTNAME at $TIME on ${DATE}." > $LOG
sudo apt-get update

for UPDATE in $UPDATE
do
   echo "Starting apt-get ${UPDATE}..." >> $LOG
   apt-get --assume-yes $UPDATE >> $LOG || error
   echo "apt-get ${UPDATE} successful!" >> $LOG
done
}

logCreate
autoUpdate
mailOutput
exit
